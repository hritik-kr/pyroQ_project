version: '3.8'

services:
  pyroq-api:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - "../../models:/app/models"
      - "../../data:/app/data"
      - "../../outputs:/app/outputs"
      - "../../logs:/app/logs"
    environment:
      - PYTHONPATH=/app
      - PYROQ_QPU=${PYROQ_QPU:-default.qubit}
      - REDIS_URL=redis://redis:6379/0
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES:-all}
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    depends_on:
      - redis

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      pyroq-api:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
  models:
    driver: local
  data:
    driver: local
  outputs:
    driver: local
  logs:
    driver: local